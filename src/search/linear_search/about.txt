Algorithm Overview:
Linear search involves sequentially examining each element in the list or array until the target element is found or
until the end of the list is reached.

Starting at the beginning of the list or array, the algorithm compares the target element with each element one by one.

If a match is found, i.e., the element being examined is equal to the target element,
the algorithm returns the index or position of that element within the list.

If the end of the list is reached without finding a match, the algorithm concludes that the target
element is not in the list and returns a special value, often -1, to indicate that.

Key Points:

- Linear search is very straightforward and easy to understand and implement.
- It works well for small lists or when the target element is likely to be near the beginning of the list.
- However, for very large lists,
linear search can be inefficient because it may need to examine every element before determining whether the target element is present.
- Linear search has a time complexity of O(n) in the worst case,
where n is the number of elements in the list. This means that the time it takes to search grows linearly with the size of the list.